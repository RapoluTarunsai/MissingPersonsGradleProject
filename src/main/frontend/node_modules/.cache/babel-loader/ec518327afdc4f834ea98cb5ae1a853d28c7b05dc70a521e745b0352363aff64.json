{"ast":null,"code":"import React,{useState,useEffect}from'react';import styles from'../styles/chatbot.module.css';import{FaRobot,FaTimes,FaPaperPlane}from'react-icons/fa';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatBot(){const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[input,setInput]=useState('');useEffect(()=>{if(isOpen&&messages.length===0){setMessages([{text:\"ðŸ‘‹ Hi! I'm TraceBot, here to assist users like you. What can I help you with today?\\n\\nYou can ask me about:\\nâ€¢ Reporting missing persons\\nâ€¢  Using filters\\nâ€¢ Matching system\\nâ€¢ Privacy & security\",sender:'bot'}]);}},[messages.length]);const handleSendMessage=async e=>{e.preventDefault();if(!input.trim())return;const userMessage={text:input,sender:'user'};setMessages([...messages,userMessage]);setInput('');try{const response=await fetch('/api/missing-persons/bot',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:input})});const botResponse=await response.json();setMessages(prev=>[...prev,{text:botResponse.message,sender:'bot'}]);}catch(error){console.error('Bot error:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.chatbotContainer,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.chatbotButton,onClick:()=>setIsOpen(!isOpen),children:isOpen?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FaTimes,{}),\" Close Chat\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FaRobot,{}),\" Need Help?\"]})}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:styles.chatWindow,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.chatHeader,children:[/*#__PURE__*/_jsx(FaRobot,{className:styles.botIcon}),/*#__PURE__*/_jsx(\"span\",{children:\"TraceBot Assistant\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.messageArea,children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles.message,\" \").concat(styles[msg.sender]),children:[msg.sender==='bot'&&/*#__PURE__*/_jsx(FaRobot,{className:styles.messageIcon}),/*#__PURE__*/_jsx(\"span\",{className:styles.messageText,children:msg.text})]},index))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,className:styles.inputArea,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type your question...\",className:styles.input}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.sendButton,children:/*#__PURE__*/_jsx(FaPaperPlane,{})})]})]})]});}export default ChatBot;","map":{"version":3,"names":["React","useState","useEffect","styles","FaRobot","FaTimes","FaPaperPlane","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ChatBot","isOpen","setIsOpen","messages","setMessages","input","setInput","length","text","sender","handleSendMessage","e","preventDefault","trim","userMessage","response","fetch","method","headers","body","JSON","stringify","message","botResponse","json","prev","error","console","className","chatbotContainer","children","chatbotButton","onClick","chatWindow","chatHeader","botIcon","messageArea","map","msg","index","concat","messageIcon","messageText","onSubmit","inputArea","type","value","onChange","target","placeholder","sendButton"],"sources":["C:/Users/tarun/Downloads/MissingPersonsGradleProject/MissingPersonsGradleProject/src/main/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/chatbot.module.css';\r\nimport { FaRobot, FaTimes, FaPaperPlane } from 'react-icons/fa';\r\n\r\nfunction ChatBot() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (isOpen && messages.length === 0) {\r\n            setMessages([\r\n                {\r\n                    text: \"ðŸ‘‹ Hi! I'm TraceBot, here to assist users like you. What can I help you with today?\\n\\nYou can ask me about:\\nâ€¢ Reporting missing persons\\nâ€¢  Using filters\\nâ€¢ Matching system\\nâ€¢ Privacy & security\",\r\n                    sender: 'bot'\r\n                }\r\n            ]);\r\n        }\r\n    }, [messages.length]);\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = { text: input, sender: 'user' };\r\n        setMessages([...messages, userMessage]);\r\n        setInput('');\r\n\r\n        try {\r\n            const response = await fetch('/api/missing-persons/bot', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ message: input })\r\n            });\r\n            const botResponse = await response.json();\r\n            setMessages(prev => [...prev, { text: botResponse.message, sender: 'bot' }]);\r\n        } catch (error) {\r\n            console.error('Bot error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.chatbotContainer}>\r\n            <button\r\n                className={styles.chatbotButton}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {isOpen ? (\r\n                    <>\r\n                        <FaTimes /> Close Chat\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <FaRobot /> Need Help?\r\n                    </>\r\n                )}\r\n            </button>\r\n\r\n            {isOpen && (\r\n                <div className={styles.chatWindow}>\r\n                    <div className={styles.chatHeader}>\r\n                        <FaRobot className={styles.botIcon} />\r\n                        <span>TraceBot Assistant</span>\r\n                    </div>\r\n                    <div className={styles.messageArea}>\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={`${styles.message} ${styles[msg.sender]}`}>\r\n                                {msg.sender === 'bot' && <FaRobot className={styles.messageIcon} />}\r\n                                <span className={styles.messageText}>{msg.text}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <form onSubmit={handleSendMessage} className={styles.inputArea}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            placeholder=\"Type your question...\"\r\n                            className={styles.input}\r\n                        />\r\n                        <button type=\"submit\" className={styles.sendButton}>\r\n                            <FaPaperPlane />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}